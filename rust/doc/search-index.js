var searchIndex = {};
searchIndex['hydra_syntax'] = {"items":[[0,"","hydra_syntax",""],[0,"token","",""],[1,"Token","hydra_syntax::token",""],[11,"text","","",0],[11,"typ","","",0],[11,"line","","",0],[11,"col","","",0],[11,"buf_offset","","",0],[2,"TokenType","",""],[12,"Identifier","","",1],[12,"Period","","",1],[12,"Bang","","",1],[12,"Question","","",1],[12,"Comma","","",1],[12,"Colon","","",1],[12,"Semicolon","","",1],[12,"Bit_And","","",1],[12,"Bit_Or","","",1],[12,"Bit_Negate","","",1],[12,"Add_Op","","",1],[12,"Min_Op","","",1],[12,"Mult_Op","","",1],[12,"Div_Op","","",1],[12,"Mod_Op","","",1],[12,"Power_Op","","",1],[12,"Increment","","",1],[12,"Decrement","","",1],[12,"Less_Than","","",1],[12,"Greater_Than","","",1],[12,"Assign","","",1],[12,"Less_Than_Eq","","",1],[12,"Greater_Than_Eq","","",1],[12,"Equal","","",1],[12,"Bang_Eq","","",1],[12,"Plus_Eq","","",1],[12,"Min_Eq","","",1],[12,"Times_Eq","","",1],[12,"Div_Eq","","",1],[12,"Mod_Eq","","",1],[12,"Power_Eq","","",1],[12,"Bit_Or_Eq","","",1],[12,"Logical_Or_Eq","","",1],[12,"Bit_And_Eq","","",1],[12,"Logical_Or","","",1],[12,"Logical_And","","",1],[12,"Excl_Range","","",1],[12,"Incl_Range","","",1],[12,"Lshovel","","",1],[12,"Rshovel","","",1],[12,"Lcurly","","",1],[12,"Rcurly","","",1],[12,"Lparen","","",1],[12,"Rparen","","",1],[12,"Lbracket","","",1],[12,"Rbracket","","",1],[12,"Chan_Recv","","",1],[12,"Chan_Send","","",1],[12,"Pub_Class_Var","","",1],[12,"Priv_Class_Var","","",1],[12,"Pub_Inst_Var","","",1],[12,"Priv_Inst_Var","","",1],[12,"Function","","",1],[12,"Spawn","","",1],[12,"If","","",1],[12,"Else","","",1],[12,"Then","","",1],[12,"For","","",1],[12,"In","","",1],[12,"While","","",1],[12,"Do","","",1],[12,"Not","","",1],[12,"And","","",1],[12,"Or","","",1],[12,"From","","",1],[12,"To","","",1],[12,"By","","",1],[12,"End","","",1],[12,"Class","","",1],[12,"Import","","",1],[12,"As","","",1],[12,"Export","","",1],[12,"Super","","",1],[12,"Supers","","",1],[12,"This","","",1],[12,"Return","","",1],[12,"Operator","","",1],[12,"Extends","","",1],[12,"Generator","","",1],[12,"Either","","",1],[12,"Wait_For","","",1],[12,"Break","","",1],[12,"Continue","","",1],[12,"Yield","","",1],[12,"Given","","",1],[12,"Is","","",1],[12,"Var","","",1],[12,"True","","",1],[12,"False","","",1],[12,"New","","",1],[12,"Upto","","",1],[12,"Through","","",1],[12,"String_Literal","","",1],[12,"Binary_Literal","","",1],[12,"Hex_Literal","","",1],[12,"Int_Literal","","",1],[12,"Float_Literal","","",1],[12,"Multiline_Comment","","",1],[12,"Singleline_Comment","","",1],[3,"str_to_type","",""],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[10,"clone","","",0],[10,"start","","",0],[10,"end","","",0],[10,"fmt","","",0],[0,"scanner","hydra_syntax",""],[3,"tokenize_str","hydra_syntax::scanner",""],[3,"tokenize_file","",""],[3,"stream_from_str","",""],[3,"stream_from_file","",""],[0,"ast","hydra_syntax",""],[1,"Expr","hydra_syntax::ast",""],[11,"data","","",2],[1,"Stmt","",""],[11,"data","","",3],[2,"ExprData","",""],[12,"FuncCall","","A call to a function including its qualifying path and passed parameters",4],[12,"InclusiveRange","","An inclusive range 0...10 or 0 through 10",4],[12,"ExclusiveRange","","An exclusive range 0..10 or 0 upto 10",4],[12,"Int","","An integer expression",4],[12,"IdentExpr","","An identifier",4],[12,"BinaryExpr","","A binary expression",4],[2,"StmtData","",""],[12,"ExprStmt","","A stmt that is also an expression, function calls and var++/-- etc.",5],[12,"ForInLoop","","For in loop bound variables, generator expression, and block of stmts",5],[12,"WhileLoop","","While loop condition expression and block of stmts",5],[4,"Ident","","Identifier expressions, variable names etc."],[6,"Node","",""],[10,"new","","",2],[10,"gen_code","","",2],[10,"new","","",3],[10,"gen_code","","",3],[0,"parser","hydra_syntax",""],[1,"AsyncParser","hydra_syntax::parser",""],[11,"tokens","","",6],[11,"peek_tok","","",6],[11,"tok","","",6],[1,"SyncParser","",""],[11,"tokens","","",7],[11,"tok_idx","","",7],[3,"parse_file_async","","Scan and Parse a file in parallel"],[3,"parse_file_sync","","Scan and then Parse a file"],[3,"parse_str_async","","Scan and Parse a string in parallel"],[3,"parse_str_sync","","Scan and then Parse a string"],[6,"HydraParser","",""],[10,"parse","","",8],[6,"HydraBaseParser","",""],[9,"tok","","Returns the current token",9],[9,"peek","","Returns the next token or None if at EOF",9],[9,"next_opt","","Consumes the next token and returns true if\npossible, otherwise returns false if at EOF",9],[10,"next","","Advance to next token or fail! if at EOF",9],[10,"next_is","","If the next token is the passed token type, then consume it and return\ntrue, otherwise false",9],[10,"expect","","Consume the next token if it is of the expected token type, otherwise fail!",9],[10,"program_stmts","","",9],[10,"for_in_loop","","",9],[10,"property_path","","",9],[10,"func_call","","",9],[10,"stmt_opt","","",9],[10,"stmt","","",9],[10,"incl_range","","",9],[10,"excl_range","","",9],[10,"expr_opt","","",9],[10,"expr","","",9],[10,"ident_opt","","",9],[10,"ident","","",9],[10,"stmts","","",9],[10,"exprs","","",9],[10,"idents","","",9],[10,"block","","",9],[10,"do_block","","",9],[10,"new","","",6],[10,"next_opt","","",6],[10,"peek","","",6],[10,"tok","","",6],[10,"new","","",7],[10,"next_opt","","",7],[10,"peek","","",7],[10,"tok","","",7]],"paths":[[1,"Token"],[2,"TokenType"],[1,"Expr"],[1,"Stmt"],[2,"ExprData"],[2,"StmtData"],[1,"AsyncParser"],[1,"SyncParser"],[6,"HydraParser"],[6,"HydraBaseParser"]]};
searchIndex['hydra_jit'] = {"items":[[0,"","hydra_jit",""],[0,"codegen","",""],[1,"Builder","hydra_jit::codegen",""],[11,"builder","","",0],[11,"ctx","","",0],[11,"pkgs","","",0],[11,"curr_pkg","","",0],[11,"curr_func","","",0],[4,"Package","",""],[4,"Context","",""],[4,"Scope","",""],[4,"Value","",""],[4,"Type","",""],[4,"LLVMBuilder","",""],[4,"Block","",""],[6,"CodeGenerator","",""],[9,"gen_code","","",1],[10,"new","","",0],[10,"dump","","",0],[10,"print_module","","",0],[10,"create_package","","",0],[10,"declare_function","","",0],[10,"declare_variadic_function","","",0],[10,"create_function","","",0],[10,"create_variadic_function","","",0],[10,"call","","",0],[10,"get_param","","",0],[10,"ret","","",0],[10,"cmp_eq","","",0],[10,"cmp_not_eq","","",0],[10,"cmp_less_than","","",0],[10,"cmp_less_than_eq","","",0],[10,"cmp_greater_than","","",0],[10,"cmp_greater_than_eq","","",0],[10,"add_op","","",0],[10,"sub_op","","",0],[10,"mul_op","","",0],[10,"div_op","","",0],[10,"mod_op","","",0],[10,"and_op","","",0],[10,"or_op","","",0],[10,"lshift_op","","",0],[10,"rshift_op","","",0],[10,"phi_node","","",0],[10,"add_incoming","","",0],[10,"array_malloc","","",0],[10,"new_block","","",0],[10,"goto_block","","",0],[10,"conditional_break","","",0],[10,"break_to","","",0],[10,"func_type","","",0],[10,"char_type","","",0],[10,"int32_type","","",0],[10,"string_type","","",0],[10,"int","","",0],[10,"string","","",0]],"paths":[[1,"Builder"],[6,"CodeGenerator"]]};

initSearch(searchIndex);
