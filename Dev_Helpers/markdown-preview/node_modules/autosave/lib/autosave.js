(function() {
  var $;

  $ = require('atom').$;

  module.exports = {
    configDefaults: {
      enabled: false
    },
    activate: function() {
      atom.workspaceView.on('focusout', ".editor:not(.mini)", (function(_this) {
        return function(event) {
          var editor, _ref;
          editor = (_ref = event.targetView()) != null ? _ref.getModel() : void 0;
          return _this.autosave(editor);
        };
      })(this));
      atom.workspaceView.on('pane:before-item-destroyed', (function(_this) {
        return function(event, paneItem) {
          return _this.autosave(paneItem);
        };
      })(this));
      return $(window).preempt('beforeunload', (function(_this) {
        return function() {
          var pane, paneItem, _i, _len, _ref, _results;
          _ref = atom.workspaceView.getPanes();
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            pane = _ref[_i];
            _results.push((function() {
              var _j, _len1, _ref1, _results1;
              _ref1 = pane.getItems();
              _results1 = [];
              for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                paneItem = _ref1[_j];
                _results1.push(this.autosave(paneItem));
              }
              return _results1;
            }).call(_this));
          }
          return _results;
        };
      })(this));
    },
    autosave: function(paneItem) {
      if (!atom.config.get('autosave.enabled')) {
        return;
      }
      if ((paneItem != null ? typeof paneItem.getUri === "function" ? paneItem.getUri() : void 0 : void 0) == null) {
        return;
      }
      if (!(paneItem != null ? typeof paneItem.isModified === "function" ? paneItem.isModified() : void 0 : void 0)) {
        return;
      }
      return paneItem != null ? typeof paneItem.save === "function" ? paneItem.save() : void 0 : void 0;
    }
  };

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/autosave/lib/autosave.js.map
