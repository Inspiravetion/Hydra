(function() {
  var WorkspaceView;

  WorkspaceView = require('atom').WorkspaceView;

  describe("Autoflow package", function() {
    var autoflow, editor, editorView, _ref;
    _ref = [], autoflow = _ref[0], editor = _ref[1], editorView = _ref[2];
    describe("autoflow:reflow-paragraph", function() {
      beforeEach(function() {
        var activationPromise;
        atom.workspaceView = new WorkspaceView;
        atom.workspaceView.openSync();
        atom.workspaceView.attachToDom();
        editorView = atom.workspaceView.getActiveView();
        editor = editorView.editor;
        atom.config.set('editor.preferredLineLength', 30);
        activationPromise = atom.packages.activatePackage('autoflow');
        editorView.trigger('autoflow:reflow-paragraph');
        return waitsForPromise(function() {
          return activationPromise;
        });
      });
      it("rearranges line breaks in the current paragraph to ensure lines are shorter than config.editor.preferredLineLength", function() {
        editor.setText("This is a preceding paragraph, which shouldn't be modified by a reflow of the following paragraph.\n\nThe quick brown fox jumps over the lazy\ndog. The preceding sentence contains every letter\nin the entire English alphabet, which has absolutely no relevance\nto this test.\n\nThis is a following paragraph, which shouldn't be modified by a reflow of the preciding paragraph.\n");
        editor.setCursorBufferPosition([3, 5]);
        editorView.trigger('autoflow:reflow-paragraph');
        return expect(editor.getText()).toBe("This is a preceding paragraph, which shouldn't be modified by a reflow of the following paragraph.\n\nThe quick brown fox jumps over\nthe lazy dog. The preceding\nsentence contains every letter\nin the entire English\nalphabet, which has absolutely\nno relevance to this test.\n\nThis is a following paragraph, which shouldn't be modified by a reflow of the preciding paragraph.\n");
      });
      return it("allows for single words that exceed the preferred wrap column length", function() {
        editor.setText("this-is-a-super-long-word-that-shouldn't-break-autoflow and these are some smaller words");
        editor.setCursorBufferPosition([0, 4]);
        editorView.trigger('autoflow:reflow-paragraph');
        return expect(editor.getText()).toBe("this-is-a-super-long-word-that-shouldn't-break-autoflow\nand these are some smaller\nwords");
      });
    });
    return describe("reflowing text", function() {
      beforeEach(function() {
        atom.workspaceView = new WorkspaceView;
        return autoflow = require("../lib/autoflow");
      });
      it('respects current paragraphs', function() {
        var res, text;
        text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida nibh id magna ullamcorper sagittis. Maecenas\net enim eu orci tincidunt adipiscing\naliquam ligula.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nPhasellus gravida\nnibh id magna ullamcorper\ntincidunt adipiscing lacinia a dui. Etiam quis erat dolor.\nrutrum nisl fermentum rhoncus. Duis blandit ligula facilisis fermentum.';
        res = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida nibh\nid magna ullamcorper sagittis. Maecenas et enim eu orci tincidunt adipiscing\naliquam ligula.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida nibh\nid magna ullamcorper tincidunt adipiscing lacinia a dui. Etiam quis erat dolor.\nrutrum nisl fermentum rhoncus. Duis blandit ligula facilisis fermentum.';
        return expect(autoflow.reflow(text, {
          wrapColumn: 80
        })).toEqual(res);
      });
      it('respects indentation', function() {
        var res, text;
        text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida nibh id magna ullamcorper sagittis. Maecenas\net enim eu orci tincidunt adipiscing\naliquam ligula.\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n    Phasellus gravida\n    nibh id magna ullamcorper\n    tincidunt adipiscing lacinia a dui. Etiam quis erat dolor.\n    rutrum nisl fermentum  rhoncus. Duis blandit ligula facilisis fermentum';
        res = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida nibh\nid magna ullamcorper sagittis. Maecenas et enim eu orci tincidunt adipiscing\naliquam ligula.\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida\n    nibh id magna ullamcorper tincidunt adipiscing lacinia a dui. Etiam quis\n    erat dolor. rutrum nisl fermentum  rhoncus. Duis blandit ligula facilisis\n    fermentum';
        return expect(autoflow.reflow(text, {
          wrapColumn: 80
        })).toEqual(res);
      });
      it('respects prefixed text (comments!)', function() {
        var res, text;
        text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida nibh id magna ullamcorper sagittis. Maecenas\net enim eu orci tincidunt adipiscing\naliquam ligula.\n\n  #  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  #  Phasellus gravida\n  #  nibh id magna ullamcorper\n  #  tincidunt adipiscing lacinia a dui. Etiam quis erat dolor.\n  #  rutrum nisl fermentum  rhoncus. Duis blandit ligula facilisis fermentum';
        res = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida nibh\nid magna ullamcorper sagittis. Maecenas et enim eu orci tincidunt adipiscing\naliquam ligula.\n\n  #  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida\n  #  nibh id magna ullamcorper tincidunt adipiscing lacinia a dui. Etiam quis\n  #  erat dolor. rutrum nisl fermentum  rhoncus. Duis blandit ligula facilisis\n  #  fermentum';
        return expect(autoflow.reflow(text, {
          wrapColumn: 80
        })).toEqual(res);
      });
      it('respects multiple prefixes (js/c comments)', function() {
        var res, text;
        text = '// Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida\net enim eu orci tincidunt adipiscing\naliquam ligula.';
        res = '// Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida et\n// enim eu orci tincidunt adipiscing aliquam ligula.';
        return expect(autoflow.reflow(text, {
          wrapColumn: 80
        })).toEqual(res);
      });
      return it('properly handles * prefix', function() {
        var res, text;
        text = '* Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida\net enim eu orci tincidunt adipiscing\naliquam ligula.\n\n  * soidjfiojsoidj foi';
        res = '* Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida et\n* enim eu orci tincidunt adipiscing aliquam ligula.\n\n  * soidjfiojsoidj foi';
        return expect(autoflow.reflow(text, {
          wrapColumn: 80
        })).toEqual(res);
      });
    });
  });

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/autoflow/spec/autoflow-spec.js.map
