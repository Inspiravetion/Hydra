(function() {
  var PackageMenuView, View, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('underscore-plus');

  View = require('atom').View;

  module.exports = PackageMenuView = (function(_super) {
    __extends(PackageMenuView, _super);

    function PackageMenuView() {
      return PackageMenuView.__super__.constructor.apply(this, arguments);
    }

    PackageMenuView.content = function() {
      return this.li((function(_this) {
        return function() {
          return _this.a({
            outlet: 'link',
            "class": 'icon'
          }, function() {
            _this.span({
              outlet: 'nameLabel'
            });
            return _this.span({
              outlet: 'packageAuthorLabel',
              "class": 'package-author'
            });
          });
        };
      })(this));
    };

    PackageMenuView.prototype.initialize = function(pack, packageManager) {
      this.pack = pack;
      this.packageManager = packageManager;
      this.attr('name', this.pack.name);
      this.attr('type', 'package');
      this.nameLabel.text(this.packageManager.getPackageTitle(this.pack));
      this.packageAuthorLabel.text(this.packageManager.getAuthorUserName(this.pack));
      this.checkForUpdates();
      return this.subscribe(this.packageManager, 'package-updated theme-updated', (function(_this) {
        return function(_arg) {
          var name;
          name = _arg.name;
          if (_this.pack.name === name) {
            return _this.link.removeClass('icon-squirrel');
          }
        };
      })(this));
    };

    PackageMenuView.prototype.checkForUpdates = function() {
      if (atom.packages.isBundledPackage(this.pack.name)) {
        return;
      }
      return this.getAvailablePackage((function(_this) {
        return function(availablePackage) {
          if (_this.packageManager.canUpgrade(_this.pack, availablePackage)) {
            return _this.link.addClass('icon-squirrel');
          }
        };
      })(this));
    };

    PackageMenuView.prototype.getAvailablePackage = function(callback) {
      return this.packageManager.getPackage(this.pack.name).then(function(availablePackage) {
        return callback(availablePackage);
      });
    };

    return PackageMenuView;

  })(View);

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/settings-view/lib/package-menu-view.js.map
