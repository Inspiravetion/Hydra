(function() {
  var OverlaySelectListView, SelectListView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SelectListView = require('atom').SelectListView;

  module.exports = OverlaySelectListView = (function(_super) {
    __extends(OverlaySelectListView, _super);

    function OverlaySelectListView() {
      return OverlaySelectListView.__super__.constructor.apply(this, arguments);
    }

    OverlaySelectListView.prototype.initialize = function(listOfItems, itemGenerator) {
      this.listOfItems = listOfItems;
      this.itemGenerator = itemGenerator;
      OverlaySelectListView.__super__.initialize.apply(this, arguments);
      this.addClass('overlay from-top');
      return this.setItems(this.listOfItems);
    };

    OverlaySelectListView.prototype.attach = function() {
      atom.workspaceView.append(this);
      return this.focusFilterEditor();
    };

    OverlaySelectListView.prototype.viewForItem = function(item) {
      return this.itemGenerator(item);
    };

    OverlaySelectListView.prototype.cancel = function() {};

    OverlaySelectListView.prototype.confirmed = function(item) {};

    return OverlaySelectListView;

  })(SelectListView);

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/styleguide/lib/overlay-select-list-view.js.map
