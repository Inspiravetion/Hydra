(function() {
  var WorkspaceView, fs;

  fs = require('fs-plus');

  WorkspaceView = require('atom').WorkspaceView;

  describe("Archive viewer", function() {
    var archiveView;
    archiveView = null;
    beforeEach(function() {
      atom.workspaceView = new WorkspaceView;
      atom.workspace = atom.workspaceView.model;
      waitsForPromise(function() {
        return atom.packages.activatePackage('archive-view');
      });
      waitsForPromise(function() {
        return atom.workspaceView.open('nested.tar');
      });
      return runs(function() {
        return archiveView = atom.workspaceView.find('.archive-editor').view();
      });
    });
    describe(".initialize()", function() {
      it("displays the files and folders in the archive file", function() {
        expect(archiveView).toExist();
        waitsFor(function() {
          return archiveView.find('.entry').length > 0;
        });
        return runs(function() {
          expect(archiveView.find('.directory').length).toBe(6);
          expect(archiveView.find('.directory:eq(0)').text()).toBe('d1');
          expect(archiveView.find('.directory:eq(1)').text()).toBe('d2');
          expect(archiveView.find('.directory:eq(2)').text()).toBe('d3');
          expect(archiveView.find('.directory:eq(3)').text()).toBe('d4');
          expect(archiveView.find('.directory:eq(4)').text()).toBe('da');
          expect(archiveView.find('.directory:eq(5)').text()).toBe('db');
          expect(archiveView.find('.file').length).toBe(3);
          expect(archiveView.find('.file:eq(0)').text()).toBe('f1.txt');
          expect(archiveView.find('.file:eq(1)').text()).toBe('f2.txt');
          return expect(archiveView.find('.file:eq(2)').text()).toBe('fa.txt');
        });
      });
      return it("selects the first file", function() {
        waitsFor(function() {
          return archiveView.find('.entry').length > 0;
        });
        return runs(function() {
          return expect(archiveView.find('.selected').text()).toBe('f1.txt');
        });
      });
    });
    describe("when core:move-up/core:move-down is triggered", function() {
      return it("selects the next/previous file", function() {
        waitsFor(function() {
          return archiveView.find('.entry').length > 0;
        });
        return runs(function() {
          archiveView.find('.selected').trigger('core:move-up');
          expect(archiveView.find('.selected').text()).toBe('f1.txt');
          archiveView.find('.selected').trigger('core:move-down');
          expect(archiveView.find('.selected').text()).toBe('f2.txt');
          archiveView.find('.selected').trigger('core:move-down');
          expect(archiveView.find('.selected').text()).toBe('fa.txt');
          archiveView.find('.selected').trigger('core:move-down');
          expect(archiveView.find('.selected').text()).toBe('fa.txt');
          archiveView.find('.selected').trigger('core:move-up');
          expect(archiveView.find('.selected').text()).toBe('f2.txt');
          archiveView.find('.selected').trigger('core:move-up');
          return expect(archiveView.find('.selected').text()).toBe('f1.txt');
        });
      });
    });
    describe("when a file is clicked", function() {
      return it("copies the contents to a temp file and opens it in a new editor", function() {
        waitsFor(function() {
          return archiveView.find('.entry').length > 0;
        });
        runs(function() {
          return archiveView.find('.file:eq(2)').trigger('click');
        });
        waitsFor(function() {
          return atom.workspaceView.getActivePane().getItems().length > 1;
        });
        return runs(function() {
          expect(atom.workspaceView.getActiveView().getText()).toBe('hey there\n');
          return expect(atom.workspaceView.getActivePaneItem().getTitle()).toBe('fa.txt');
        });
      });
    });
    describe("when core:confirm is triggered", function() {
      return it("copies the contents to a temp file and opens it in a new editor", function() {
        waitsFor(function() {
          return archiveView.find('.entry').length > 0;
        });
        runs(function() {
          return archiveView.find('.file:eq(0)').trigger('core:confirm');
        });
        waitsFor(function() {
          return atom.workspaceView.getActivePane().getItems().length > 1;
        });
        return runs(function() {
          expect(atom.workspaceView.getActiveView().getText()).toBe('');
          return expect(atom.workspaceView.getActivePaneItem().getTitle()).toBe('f1.txt');
        });
      });
    });
    describe("when the file is removed", function() {
      return it("destroys the view", function() {
        waitsFor(function() {
          return archiveView.find('.entry').length > 0;
        });
        return runs(function() {
          expect(atom.workspaceView.getActivePane().getItems().length).toBe(1);
          atom.workspaceView.getActivePaneItem().file.emit('removed');
          return expect(atom.workspaceView.getActivePaneItem()).toBeUndefined();
        });
      });
    });
    return describe("when the file is modified", function() {
      return it("refreshes the view", function() {
        waitsFor(function() {
          return archiveView.find('.entry').length > 0;
        });
        return runs(function() {
          spyOn(archiveView, 'refresh');
          atom.workspaceView.getActivePaneItem().file.emit('contents-changed');
          return expect(archiveView.refresh).toHaveBeenCalled();
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/archive-view/spec/archive-editor-view-spec.js.map
