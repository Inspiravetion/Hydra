(function() {
  var Reporter, WorkspaceView;

  WorkspaceView = require('atom').WorkspaceView;

  Reporter = require('../lib/reporter');

  describe("Metrics", function() {
    beforeEach(function() {
      return atom.workspaceView = new WorkspaceView;
    });
    return it("reports event", function() {
      spyOn(Reporter, 'request');
      waitsForPromise(function() {
        return atom.packages.activatePackage('metrics');
      });
      waitsFor(function() {
        return Reporter.request.callCount === 2;
      });
      runs(function() {
        Reporter.request.reset();
        return atom.packages.deactivatePackage('metrics');
      });
      waitsForPromise(function() {
        return atom.packages.activatePackage('metrics');
      });
      waitsFor(function() {
        return Reporter.request.callCount === 3;
      });
      return runs(function() {
        var requestArgs;
        requestArgs = Reporter.request.calls[0].args[0];
        expect(requestArgs.method).toBe('POST');
        expect(requestArgs.hostname).toBe('www.google-analytics.com');
        expect(requestArgs.headers).toBeDefined();
        return expect(requestArgs.path).toBeDefined();
      });
    });
  });

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/metrics/spec/metrics-spec.js.map
