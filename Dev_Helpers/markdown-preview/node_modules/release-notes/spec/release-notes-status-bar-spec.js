(function() {
  var ReleaseNotesStatusBar, WorkspaceView, triggerUpdate;

  ReleaseNotesStatusBar = require('../lib/release-notes-status-bar');

  WorkspaceView = require('atom').WorkspaceView;

  triggerUpdate = function() {
    return atom.workspaceView.trigger('window:update-available', ['v22.0.0', "NOTES"]);
  };

  describe("ReleaseNotesStatusBar", function() {
    var releaseNotesStatus, releaseNotesStatusBar, _ref;
    _ref = [], releaseNotesStatus = _ref[0], releaseNotesStatusBar = _ref[1];
    beforeEach(function() {
      atom.workspaceView = new WorkspaceView;
      waitsForPromise(function() {
        return atom.packages.activatePackage('status-bar');
      });
      waitsForPromise(function() {
        return atom.packages.activatePackage('release-notes');
      });
      return atom.workspaceView.openSync('sample.js');
    });
    describe("with no update", function() {
      return it("renders", function() {
        return expect(atom.workspaceView).not.toContain('.release-notes-status');
      });
    });
    return describe("with an update", function() {
      it("renders when the update is made available", function() {
        triggerUpdate();
        return expect(atom.workspaceView).toContain('.release-notes-status');
      });
      return describe("clicking on the status", function() {
        var workspaceViewOpen;
        workspaceViewOpen = [][0];
        return it("opens the release notes view", function() {
          workspaceViewOpen = spyOn(atom.workspaceView, 'open');
          triggerUpdate();
          atom.workspaceView.find('.release-notes-status').trigger('click');
          return expect(workspaceViewOpen.mostRecentCall.args[0]).toBe('atom://release-notes');
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/release-notes/spec/release-notes-status-bar-spec.js.map
