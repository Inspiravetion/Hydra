(function() {
  var Task, ctags, fs, handlerPath;

  Task = require('atom').Task;

  ctags = require('ctags');

  fs = require('fs-plus');

  handlerPath = require.resolve('./load-tags-handler');

  module.exports = {
    getTagsFile: function() {
      var tagsFile;
      tagsFile = atom.project.resolve("tags");
      if (fs.isFileSync(tagsFile)) {
        return tagsFile;
      }
      tagsFile = atom.project.resolve("TAGS");
      if (fs.isFileSync(tagsFile)) {
        return tagsFile;
      }
    },
    find: function(editor, callback) {
      var tagsFile, word;
      word = editor.getTextInRange(editor.getCursor().getCurrentWordBufferRange());
      tagsFile = this.getTagsFile();
      if ((word != null ? word.length : void 0) > 0 && tagsFile) {
        return ctags.findTags(tagsFile, word, callback);
      } else {
        return process.nextTick(function() {
          return callback(null, []);
        });
      }
    },
    getAllTags: function(callback) {
      var projectTags, task;
      projectTags = [];
      task = Task.once(handlerPath, atom.project.getPath(), function() {
        return callback(projectTags);
      });
      task.on('tags', function(paths) {
        return projectTags.push.apply(projectTags, paths);
      });
      return task;
    }
  };

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/symbols-view/lib/tag-reader.js.map
