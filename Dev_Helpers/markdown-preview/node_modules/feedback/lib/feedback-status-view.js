(function() {
  var FeedbackStatusView, View,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('atom').View;

  module.exports = FeedbackStatusView = (function(_super) {
    __extends(FeedbackStatusView, _super);

    function FeedbackStatusView() {
      this.attach = __bind(this.attach, this);
      return FeedbackStatusView.__super__.constructor.apply(this, arguments);
    }

    FeedbackStatusView.content = function() {
      return this.a({
        href: '#',
        "class": 'feedback-status inline-block',
        tabindex: '-1'
      }, 'Send Feedback');
    };

    FeedbackStatusView.prototype.initialize = function() {
      this.on('click', (function(_this) {
        return function() {
          atom.workspaceView.trigger('feedback:report');
          return false;
        };
      })(this));
      this.setTooltip("Frustrated? Happy? Annoyed? Let us know by clicking here!");
      return this.attach();
    };

    FeedbackStatusView.prototype.attach = function() {
      var statusBar;
      statusBar = atom.workspaceView.statusBar;
      if (statusBar) {
        return statusBar.appendRight(this);
      } else {
        return this.subscribe(atom.packages.once('activated', this.attach));
      }
    };

    return FeedbackStatusView;

  })(View);

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/feedback/lib/feedback-status-view.js.map
