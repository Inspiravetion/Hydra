(function() {
  var $, SupportInfoView, View, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ref = require('atom'), $ = _ref.$, View = _ref.View;

  module.exports = SupportInfoView = (function(_super) {
    __extends(SupportInfoView, _super);

    function SupportInfoView() {
      return SupportInfoView.__super__.constructor.apply(this, arguments);
    }

    SupportInfoView.content = function() {
      return this.div({
        tabindex: -1,
        "class": 'support-info overlay from-top native-key-bindings'
      }, (function(_this) {
        return function() {
          _this.h1("Where to get support");
          _this.ul(function() {
            _this.li(function() {
              _this.span({
                "class": 'text-highlight'
              }, "Found a Bug?");
              _this.span(" Most of Atom's functionality comes from open source packages (e.g. ");
              _this.a({
                href: 'http://github.com/atom/find-and-replace'
              }, 'Find And Replace');
              _this.span(" and ");
              _this.a({
                href: 'http://github.com/atom/settings-view'
              }, 'Settings');
              _this.span(".) ");
              _this.a({
                href: 'https://atom.io/packages'
              }, 'Find the related package');
              return _this.span(" and create an issue on the package's GitHub repo that describes how to reproduce the bug.");
            });
            _this.li(function() {
              _this.span({
                "class": 'text-highlight'
              }, "Feature Request?");
              _this.span(" Start a Topic on the ");
              _this.a({
                href: 'http://discuss.atom.io'
              }, 'Atom forum');
              return _this.span(".");
            });
            _this.li(function() {
              _this.span("Check the ");
              _this.a({
                href: 'https://atom.io/faq'
              }, 'FAQ');
              return _this.span(".");
            });
            return _this.li(function() {
              return _this.span("If your feedback doesn't fit into any of the above categories then click the Send Feedback button below.");
            });
          });
          return _this.div(function() {
            return _this.button({
              outlet: 'sendButton',
              "class": 'btn btn-lg'
            }, 'Send Feedback');
          });
        };
      })(this));
    };

    SupportInfoView.prototype.initialize = function() {
      atom.workspaceView.prepend(this);
      this.subscribe(this.sendButton, 'click', (function(_this) {
        return function() {
          var FeedbackFormView;
          FeedbackFormView = require('./feedback-form-view');
          return new FeedbackFormView();
        };
      })(this));
      this.subscribe(this, 'focusout', (function(_this) {
        return function() {
          return process.nextTick(function() {
            if (!(_this.is(':focus') || _this.find(':focus').length > 0)) {
              return _this.detach();
            }
          });
        };
      })(this));
      this.subscribe(atom.workspaceView, 'core:cancel', (function(_this) {
        return function() {
          return _this.detach();
        };
      })(this));
      this.subscribe(this, 'feedback:tab', (function(_this) {
        return function() {
          return _this.sendButton.focus();
        };
      })(this));
      return this.focus();
    };

    return SupportInfoView;

  })(View);

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/feedback/lib/support-info-view.js.map
