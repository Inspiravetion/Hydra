(function() {
  var ImageEditor, ImageEditorView, WorkspaceView, path;

  path = require('path');

  ImageEditor = require('../lib/image-editor');

  ImageEditorView = require('../lib/image-editor-view');

  WorkspaceView = require('atom').WorkspaceView;

  describe("ImageEditor", function() {
    describe(".deserialize(state)", function() {
      return it("returns undefined if no file exists at the given path", function() {
        var editor, state;
        spyOn(console, 'warn');
        editor = new ImageEditor(path.join(__dirname, 'fixtures', 'binary-file.png'));
        state = editor.serialize();
        expect(ImageEditor.deserialize(state)).toBeDefined();
        state.filePath = 'bogus';
        return expect(ImageEditor.deserialize(state)).toBeUndefined();
      });
    });
    describe(".activate()", function() {
      return it("registers a project opener that handles image file extension", function() {
        atom.workspaceView = new WorkspaceView();
        atom.workspace = atom.workspaceView.model;
        waitsForPromise(function() {
          return atom.packages.activatePackage('image-view');
        });
        runs(function() {
          atom.workspaceView = new WorkspaceView();
          return atom.workspaceView.open(path.join(__dirname, 'fixtures', 'binary-file.png'));
        });
        waitsFor(function() {
          return atom.workspaceView.getActivePaneItem() instanceof ImageEditor;
        });
        runs(function() {
          expect(atom.workspaceView.getActivePaneItem().getTitle()).toBe('binary-file.png');
          atom.workspaceView.destroyActivePaneItem();
          atom.packages.deactivatePackage('image-view');
          return atom.workspaceView.open(path.join(__dirname, 'fixtures', 'binary-file.png'));
        });
        waitsFor(function() {
          return atom.workspaceView.getActivePaneItem() != null;
        });
        return runs(function() {
          return expect(atom.workspaceView.getActivePaneItem() instanceof ImageEditor).toBe(false);
        });
      });
    });
    return describe("when a pane is added or removed", function() {
      return it("recenters the image", function() {
        var filepath, rightPane;
        atom.workspaceView = new WorkspaceView();
        atom.workspace = atom.workspaceView.model;
        atom.workspaceView.attachToDom();
        filepath = path.join(__dirname, 'fixtures', 'binary-file.png');
        rightPane = null;
        spyOn(ImageEditorView.prototype, "centerImage");
        waitsForPromise(function() {
          return atom.packages.activatePackage('image-view');
        });
        waitsForPromise(function() {
          return atom.workspace.open(filepath);
        });
        runs(function() {
          ImageEditorView.prototype.centerImage.reset();
          return rightPane = atom.workspace.getActivePane().splitRight();
        });
        waitsFor(function() {
          return ImageEditorView.prototype.centerImage.callCount > 0;
        });
        runs(function() {
          ImageEditorView.prototype.centerImage.reset();
          return rightPane.destroy();
        });
        return waitsFor(function() {
          return ImageEditorView.prototype.centerImage.callCount > 0;
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/image-view/spec/image-editor-spec.js.map
