(function() {
  var ImageEditor, fs, path;

  path = require('path');

  fs = require('fs-plus');

  module.exports = ImageEditor = (function() {
    atom.deserializers.add(ImageEditor);

    ImageEditor.deserialize = function(_arg) {
      var filePath;
      filePath = _arg.filePath;
      if (fs.isFileSync(filePath)) {
        return new ImageEditor(filePath);
      } else {
        return console.warn("Could not deserialize image editor for path '" + filePath + "' because that file no longer exists");
      }
    };

    function ImageEditor(filePath) {
      this.filePath = filePath;
    }

    ImageEditor.prototype.serialize = function() {
      return {
        filePath: this.filePath,
        deserializer: this.constructor.name
      };
    };

    ImageEditor.prototype.getViewClass = function() {
      return require('./image-editor-view');
    };

    ImageEditor.prototype.getTitle = function() {
      if (this.filePath != null) {
        return path.basename(this.filePath);
      } else {
        return 'untitled';
      }
    };

    ImageEditor.prototype.getUri = function() {
      return this.filePath;
    };

    ImageEditor.prototype.getPath = function() {
      return this.filePath;
    };

    ImageEditor.prototype.isEqual = function(other) {
      return other instanceof ImageEditor && this.getUri() === other.getUri();
    };

    return ImageEditor;

  })();

}).call(this);

//# sourceMappingURL=/../../../../../../../../..//tmp/atom-build/Atom.app/Contents/Resources/app/node_modules/image-view/lib/image-editor.js.map
